name: CI: Qodana → Build → Push to Harbor

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  IMAGE_NAME: kube-yaml-service
  REGISTRY: ${{ secrets.HARBOR_REGISTRY }}   # e.g. harbor.example.com
  PROJECT:  ${{ secrets.HARBOR_PROJECT }}    # e.g. platform
  DOCKER_BUILDKIT: 1

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0

      # Optional but recommended: pre-compile for better JVM inspections
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle
      - name: Pre-build bytecode (skip tests for speed)
        run: ./gradlew --no-daemon clean assemble -x test

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2025.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: ${{ github.event_name == 'pull_request' }}
          use-caches: true
          post-pr-comment: true
          use-annotations: true
          upload-result: true

      - name: Upload SARIF to code scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: qodana.sarif.json

  build-and-push:
    runs-on: ubuntu-latest
    needs: qodana
    if: needs.qodana.result == 'success'       # gate on Qodana
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Build JAR
        run: ./gradlew --no-daemon clean build -x test

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.PROJECT }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
