name: CI → Build → Push (Docker Hub) → Deploy (Helm)

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch: {}

env:
  IMAGE_NAME: kube-yaml-service
  IMAGE_REPO: docker.io/mpw07458/kube-yaml-service
  DOCKER_BUILDKIT: 1
  RELEASE_NAME: prod
  NAMESPACE: apps
  CHART_PATH: charts/kube-yaml-service

jobs:
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Pre-build bytecode (skip tests)
        run: ./gradlew --no-daemon clean assemble -x test

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2025.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: ${{ github.event_name == 'pull_request' }}
          use-caches: true
          post-pr-comment: true
          use-annotations: true
          upload-result: true

      - name: Upload SARIF to code scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: qodana.sarif.json

  build-and-push:
    needs: qodana
    if: needs.qodana.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Validate Docker Hub creds
        run: |
          test -n "${{ secrets.DOCKERHUB_USERNAME }}" || (echo "Missing DOCKERHUB_USERNAME"; exit 1)
          test -n "${{ secrets.DOCKERHUB_TOKEN }}"    || (echo "Missing DOCKERHUB_TOKEN"; exit 1)

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Build JAR
        run: ./gradlew --no-daemon clean build -x test

      - name: Compute image tag (sha-short)
        id: tag
        run: |
          SHORT_SHA="${GITHUB_SHA::7}"
          echo "tag=sha-${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          echo "Using tag: sha-${SHORT_SHA}"

      - name: Docker meta (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_REPO }}
          tags: |
            type=raw,value=${{ steps.tag.outputs.tag }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    if: needs.build-and-push.result == 'success' && needs.build-and-push.outputs.image_tag != ''
    # IMPORTANT: run on your self-hosted Mac so 127.0.0.1:6443 is reachable
    runs-on: [self-hosted, macos, deploy]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Show runner info
        run: echo "Runner: $RUNNER_NAME / $RUNNER_OS / $RUNNER_ARCH"

      - uses: azure/setup-kubectl@v4
      - uses: azure/setup-helm@v4

      # Pull kubeconfig from Rancher Desktop VM, export KUBECONFIG for this job
      - name: Configure kubeconfig (Rancher Desktop VM)
        shell: bash
        run: |
          # If rdctl isn't on PATH, add it (adjust path if needed)
          which rdctl || export PATH="/Applications/Rancher Desktop.app/Contents/Resources/resources/darwin/bin:$PATH"

          rdctl kubernetes status || true
          rdctl shell sudo cat /etc/rancher/k3s/k3s.yaml > "$HOME/k3s.yaml"
          chmod 600 "$HOME/k3s.yaml"
          echo "KUBECONFIG=$HOME/k3s.yaml" >> "$GITHUB_ENV"
          kubectl cluster-info
          kubectl get nodes

      - name: Ensure namespace
        run: kubectl get ns $NAMESPACE || kubectl create ns $NAMESPACE

      - name: Helm upgrade/install
        run: |
          helm upgrade --install $RELEASE_NAME $CHART_PATH \
            --namespace $NAMESPACE \
            --set image.repository=$IMAGE_REPO \
            --set image.tag='${{ needs.build-and-push.outputs.image_tag }}' \
            --history-max 5

      - name: Wait for rollout
        run: |
          kubectl -n $NAMESPACE rollout status deploy/${RELEASE_NAME}-kube-yaml-service --timeout=180s
          kubectl -n $NAMESPACE get pods,svc
